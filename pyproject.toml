[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "filmtagger"
dynamic = ["version"]
description = "A simple CLI to tag film scans with EXIF metadata"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["film", "photography", "exif", "metadata"]
authors = [
    { name = "Scott Johnston", email = "sjohnston@alum.mit.edu" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "click>=8.0.0",
    "tomli>=1.2.0",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.21.0",
    "python-dateutil>=2.8.0",
    "pyexiv2>=2.8.0",
    "importlib-resources>=5.0.0; python_version < '3.9'",  # For Python 3.8 compatibility
]

[project.urls]
Homepage = "https://github.com/2n3906/filmtagger"
Repository = "https://github.com/2n3906/filmtagger.git"
Issues = "https://github.com/2n3906/filmtagger/issues"

[project.scripts]
filmtagger = "filmtagger.cli:main"

[tool.hatch.version]
path = "filmtagger/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=filmtagger {args:tests}"
cov-report = ["- coverage combine", "coverage report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.0.243",
]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:filmtagger tests}"
style = ["ruff {args:.}", "black --check --diff {args:.}"]
fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
all = ["style", "typing"]

[tool.black]
target-version = ["py38"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "PLR0913",  # Too many arguments to function call
    "S101",     # Use of assert detected
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.run]
source_pkgs = ["filmtagger", "tests"]
branch = true
parallel = true
omit = [
    "filmtagger/__about__.py",
]

[tool.coverage.paths]
filmtagger = ["filmtagger", "*/filmtagger/filmtagger"]
tests = ["tests", "*/filmtagger/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
] 
